# Problem #2: Even fibonacci numbers
# https://projecteuler.net/problem=2
#
# Each new term in the Fibonacci sequence is generated by adding the previous
# two terms. By starting with 1 and 2, the first 10 terms will be:
#
#       1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
#
# By considering the terms in the Fibonacci sequence whose values do not exceed
# four million, find the sum of the even-valued terms.

LIMIT = 4000000

class fibonacci(object):
    def __init__(self):
        self.curr = 0
        self.n = 1

    def __iter__(self):
        return self;

    # python 3
    def __next__(self):
        return self.next

    def next(self):
        curr = self.curr

        self.curr = self.n
        self.n = self.n + curr

        return self.n

def simple():
    sum = 0
    fib = fibonacci()

    f = fib.next()

    while f <= LIMIT:
        if (f % 2) == 0:
            sum = sum + f

        f = fib.next()

    return sum

if __name__ == "__main__":
    print("simple: " + str(simple()))
